generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model AcademicJourney {
  id    String @id
  title String
}

model Account {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Activity {
  id        String   @id
  title     String
  userId    Int
  taskId    Int
  createdAt DateTime @default(now())
  journeyId String?
}

model BusinessJourney {
  id    String @id
  title String
}

model CareerJourney {
  id    String @id
  title String
}

model Experience {
  id    String @id
  title String
}

model Field {
  id    String @id
  title String
}

model Goal {
  id        String  @id
  title     String
  achieved  Boolean
  journeyId String?
}

model Interest {
  id        String  @id
  journeyId String?
}

model Journey {
  id          String  @id
  title       String?
  description String?
  userId      String
  bluePrintId String?
  journeyType String?
  fieldId     String?
}

model JourneyBluePrint {
  id          String  @id
  userId      String?
  type        String?
  templateId  String?
  title       String
  description String?
  field       String?
  expertise   String?
  price       String?
  creator     String?
  createdAt   String?
  updateAt    String?
  image       String?
}

model JourneyPrivacy {
  id        String @id
  userId    String
  journeyId String
}

model MileStone {
  id        String  @id
  journeyId String?
}

model PersonalJourney {
  id    String @id
  title String
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  User         User     @relation(fields: [userId], references: [id])
}

model Task {
  id          String   @id
  title       String
  userId      Int
  description String
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
  journeyId   String?
}

model User {
  id            String    @id
  name          String?
  image         String?
  email         String    @unique
  createdAt     DateTime? @default(now())
  bio           String?
  password      String?
  emailVerified Boolean?  @default(false)
  login         String?
  Account      Account[]
  Session      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
